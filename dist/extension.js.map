{"version":3,"file":"extension.js","mappings":"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","sources":[".././src/extension.js",".././src/fuzzysearch/fuzzysearch.js",".././src/navigation/navigation.js",".././src/navigation/utility.js",".././src/quickselect/quickselect.js",".././src/tabjump/tabjump.js",".././src/tabjump/types.js","../external commonjs \"fs\"","../external commonjs \"os\"","../external commonjs \"path\"","../external commonjs \"vscode\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["// imports\nlet navigation = require('./navigation/navigation')\nlet quickselect = require('./quickselect/quickselect')\nlet tabjump = require('./tabjump/tabjump')\nlet fuzzysearch = require('./fuzzysearch/fuzzysearch')\n\n// main\nfunction activate(context)\n{\n\tnavigation.register(context);\n\tquickselect.register(context);\n\ttabjump.register(context);\n\tfuzzysearch.register(context);\n}\n\nfunction deactivate() \n{ fuzzysearch.deactivate(); }\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","let vscode = require('vscode');\r\nlet { tmpdir, platform, EOL } = require('os');\r\nlet {join, sep} = require('path');\r\nlet {writeFileSync, watch, rmSync, readFile} = require('fs');\r\n\r\nlet term = undefined;\r\nlet termCWD = \"\";\r\nlet workspaceRootFolder = \"\";\r\nlet rgPath = \"rg\";\r\nlet fzfPath = \"fzf\";\r\nlet fuzzySearchIncludeArgs = undefined;\r\nlet fuzzySearchExcludeArgs = undefined;\r\nlet fuzzySearchContentRegExp = undefined;\r\nlet fuzzySearchTodoContentRegExp = undefined;\r\nlet fzfOptions = undefined;\r\n\r\nconst milliseconds = (new Date()).getTime();\r\nconst searchResultOutFile = join(tmpdir(), `vscode_fuzzysearch_${milliseconds.toString()}.tmp`);\r\nconst fuzzySearchFileId = \"codereaper.fuzzySearchFiles\";\r\nconst fuzzySearchFileContentId = \"codereaper.fuzzySearchFileContents\";\r\nconst fuzzySearchTodoContentsId = \"codereaper.fuzzySearchTodoContents\"\r\n\r\nfunction register(context)\r\n{\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(fuzzySearchFileId, fuzzySearchFiles),\r\n    vscode.commands.registerCommand(fuzzySearchFileContentId, fuzzySearchFileContents),\r\n    vscode.commands.registerCommand(fuzzySearchTodoContentsId, fuzzySearchTodoContents),\r\n    vscode.workspace.onDidChangeConfiguration(updateConfig),\r\n    vscode.workspace.onDidChangeWorkspaceFolders(handleWorkspaceFoldersChange)\r\n  );\r\n\r\n  writeFileSync(searchResultOutFile, '');\r\n  watch(searchResultOutFile, (eventType) => {\r\n    if (eventType == 'change')\r\n    { handleSelection(); }\r\n    else if (eventType == 'rename')\r\n    { vscode.window.showErrorMessage(\"fuzzy search output file has been renamed\\n\"); }\r\n  });\r\n\r\n  updateConfig();\r\n}\r\n\r\nfunction deactivate()\r\n{ rmSync(searchResultOutFile); }\r\n\r\nfunction updateConfig()\r\n{\r\n  const codereaper = vscode.workspace.getConfiguration(\"codereaper\");\r\n\r\n  rgPath = codereaper.get(\"ripgrepPath\");\r\n  fzfPath = codereaper.get(\"fzfPath\");\r\n  fuzzySearchIncludeArgs = `--iglob ${codereaper.get(\"fuzzySearchIncludeGlob\")}`;\r\n  fuzzySearchExcludeArgs = `--iglob ${codereaper.get(\"fuzzySearchExcludeGlob\")}`;\r\n  fuzzySearchContentRegExp = codereaper.get(\"fuzzySearchContentRegExp\");\r\n  fuzzySearchTodoContentRegExp = codereaper.get(\"fuzzySearchTodoContentRegExp\");\r\n  fzfOptions = codereaper.get(\"fzfOptions\");\r\n\r\n  handleWorkspaceFoldersChange();\r\n}\r\n\r\nfunction handleWorkspaceFoldersChange()\r\n{\r\n  workspaceRootFolder = getCommonWorkspaceFoldersRoot();\r\n  fuzzySearchIncludeArgs = assembleFuzzySearchIncludeArgs();\r\n}\r\n\r\nfunction setupTerminal()\r\n{\r\n  if (   (!term                        )\r\n      || (term.exitStatus !== undefined))\r\n  {\r\n    createTerminal();\r\n  }\r\n  else if (termCWD != workspaceRootFolder)\r\n  {\r\n    term.sendText(`cd ${workspaceRootFolder}`);\r\n    term.show();\r\n    termCWD = workspaceRootFolder;\r\n  }\r\n}\r\n\r\nfunction fuzzySearchFiles()\r\n{\r\n  setupTerminal();\r\n\r\n  const fzf_cmd = getFZFCmdFiles();\r\n  const rg_cmd = getRgCmdFiles();\r\n  const errorLevel_cmd = getShellErrorCodeCmd();\r\n\r\n  const cmd1 = `${rg_cmd} | ${fzf_cmd} > ${searchResultOutFile}`;\r\n  const cmd2 = `echo ${errorLevel_cmd} >> ${searchResultOutFile}`;\r\n  const finalCmd = concatMultipleShellCommands([cmd1, cmd2]);\r\n\r\n  term.sendText(finalCmd);\r\n  term.show();\r\n}\r\n\r\nfunction fuzzySearchFileContents()\r\n{\r\n  setupTerminal();\r\n\r\n  const fzf_cmd = getFZFCmdContents();\r\n  const rg_cmd = getRgCmdContents();\r\n  const errorLevel_cmd = getShellErrorCodeCmd();\r\n\r\n  const cmd1 = `${rg_cmd} | ${fzf_cmd} > ${searchResultOutFile}`;\r\n  const cmd2 = `echo ${errorLevel_cmd} >> ${searchResultOutFile}`;\r\n  const finalCmd = concatMultipleShellCommands([cmd1, cmd2]);\r\n\r\n  term.sendText(finalCmd);\r\n  term.show();\r\n}\r\n\r\nfunction fuzzySearchTodoContents()\r\n{\r\n  setupTerminal();\r\n\r\n  const fzf_cmd = getFZFCmdFiles();\r\n  const rg_cmd  = getRgCmdTodoContents();\r\n  const errorLevel_cmd = getShellErrorCodeCmd();\r\n\r\n  const cmd1 = `${rg_cmd} | ${fzf_cmd} > ${searchResultOutFile}`;\r\n  const cmd2 = `echo ${errorLevel_cmd} >> ${searchResultOutFile}`;\r\n  const finalCmd = concatMultipleShellCommands([cmd1, cmd2]);\r\n  \r\n  term.sendText(finalCmd);\r\n  term.show();\r\n}\r\n\r\n// helper functions\r\nfunction getRootPath(folders)\r\n{\r\n  if (folders.length == 0)\r\n  { return ''; }\r\n\r\n  if (folders.length == 1)\r\n  { return folders[0]; }\r\n \r\n  var rootPath = new Set(folders[0].split(sep));\r\n\r\n  for (var i = 1; i < folders.length; i++)\r\n  {\r\n    const thisPath = new Set(folders[i].split(sep));\r\n    rootPath = new Set([...rootPath].filter(elem => thisPath.has(elem)));\r\n  }\r\n  return [...rootPath].join(sep);\r\n}\r\n\r\nfunction getCommonWorkspaceFoldersRoot()\r\n{\r\n  const wrkspcFolders = vscode.workspace.workspaceFolders.map(function (folder) {\r\n    return folder.uri.fsPath;\r\n  });\r\n  const rootPath = getRootPath(wrkspcFolders);\r\n  return rootPath;\r\n}\r\n\r\nfunction assembleFuzzySearchIncludeArgs()\r\n{\r\n  const wrkspcFolders = vscode.workspace.workspaceFolders.map(function (folder) {\r\n    return folder.uri.fsPath;\r\n  });\r\n  const rootPath = getRootPath(wrkspcFolders);\r\n  workspaceRootFolder = rootPath;\r\n\r\n  const relFolderPaths = wrkspcFolders.map(function (folder){\r\n    var temp = folder.replace(rootPath, \"\");\r\n    if (temp.charAt(0) == sep)\r\n    {\r\n      return temp.substring(1);\r\n    }\r\n    return temp;\r\n  }).filter(function (relFolder) {\r\n    return (relFolder.length > 0);\r\n  });\r\n  var rgArgsMultipleFolders = fuzzySearchIncludeArgs;\r\n  if (relFolderPaths.length > 0)\r\n  {\r\n    const fuzzySearchIncludeGlob = vscode.workspace.getConfiguration(\"codereaper\").get(\"fuzzySearchIncludeGlob\");\r\n    var temp = relFolderPaths.map(function(relFolder) {\r\n      var temp_ = [fuzzySearchIncludeGlob.slice(0, 1), relFolder + \"/\", fuzzySearchIncludeGlob.slice(1)].join('');\r\n      return `--iglob ${temp_}`;\r\n    });\r\n    rgArgsMultipleFolders = temp.join(\" \");\r\n  }\r\n  return rgArgsMultipleFolders;\r\n}\r\n\r\nfunction createTerminal()\r\n{\r\n  const rootPath = getCommonWorkspaceFoldersRoot();\r\n  termCWD = rootPath;\r\n  workspaceRootFolder = rootPath;\r\n\r\n  term = vscode.window.createTerminal({\r\n    name: \"FuzzySearch\", \r\n    hideFromUser: true,\r\n    shellPath: getShell(),\r\n    cwd: rootPath\r\n  });\r\n}\r\n\r\nfunction getShell()\r\n{\r\n  const curPlatform = platform();\r\n  if (curPlatform == 'win32')\r\n  { return \"cmd.exe\"; }\r\n  else if (curPlatform == 'linux')\r\n  { return \"bash\"; }\r\n  else \r\n  { return undefined; }\r\n}\r\n\r\nfunction getShellErrorCodeCmd()\r\n{\r\n  const curPlatform = platform();\r\n  if (curPlatform == 'win32')\r\n  { return \"%ErrorLevel%\"; }\r\n  return \"$?\";\r\n}\r\n\r\nfunction concatMultipleShellCommands(commands)\r\n{\r\n  const curPlatform = platform();\r\n  if (curPlatform == 'win32')\r\n  { return commands.join('&'); }\r\n  return commands.join(';');\r\n}\r\n\r\nfunction getFZFCmdContents()\r\n{ return `${fzfPath} ${fzfOptions} --delimiter : --nth 3..`; }\r\n\r\nfunction getFZFCmdFiles()\r\n{ return `${fzfPath} ${fzfOptions}`; }\r\n\r\nfunction getRgCmdFiles()\r\n{\r\n  return `${rgPath} ${fuzzySearchIncludeArgs} ${fuzzySearchExcludeArgs} --files`;\r\n}\r\n\r\nfunction getRgCmdContents()\r\n{\r\n  return `${rgPath} --line-number --column ${fuzzySearchIncludeArgs} ${fuzzySearchExcludeArgs} --pcre2 ${fuzzySearchContentRegExp}`;\r\n}\r\n\r\nfunction getRgCmdTodoContents()\r\n{\r\n  return `${rgPath} --line-number --column ${fuzzySearchIncludeArgs} ${fuzzySearchExcludeArgs} --pcre2 ${fuzzySearchTodoContentRegExp}`;\r\n}\r\n\r\nfunction handleSelection()\r\n{\r\n  readFile(searchResultOutFile, {encoding: 'utf-8'}, (err, data) => {\r\n    if (err)\r\n    { return; }\r\n\r\n    let lines = data.split(EOL).filter(s => s !== '');\r\n    var i = lines.length - 1;\r\n\r\n    // try to parse error code if any\r\n    try\r\n    {\r\n      const exitCode = parseInt(lines[i]);\r\n      if  ( (isNaN(exitCode) == false) && (exitCode != 0) )\r\n      {\r\n        i -= 1;\r\n        term?.hide();\r\n      }\r\n    }\r\n    catch (error)\r\n    { console.log(error); }\r\n\r\n    // parse rest of the file\r\n    for (; i >= 0; i--)\r\n    {\r\n      const isDataGood = (lines[i].length > 0) && (lines[i][0] != '1');\r\n      if (isDataGood)\r\n      {\r\n        try\r\n        {\r\n          openFiles(lines[i]);\r\n          term?.hide();\r\n        }\r\n        catch (error)\r\n        {  console.error(error);  }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction openFiles(data)\r\n{\r\n  const filePaths = data.split('\\n').filter(s => s !== '');\r\n  filePaths.forEach(p => {\r\n    const [file, lineTmp, charTmp] = p.split(':', 3);\r\n    let line = undefined, char = 0;\r\n    // let range = new vscode.Range(0, 0, 0, 0);\r\n    if (lineTmp !== undefined) {\r\n        if (charTmp !== undefined) {\r\n            char = parseInt(charTmp) - 1;  // 1 based in rg, 0 based in VS Code\r\n        }\r\n        line = parseInt(lineTmp) - 1;  // 1 based in rg, 0 based in VS Code\r\n    }\r\n\r\n    const textDocumentOptions = {\r\n      preview: false,\r\n      selection: line?new vscode.Range(line, char, line, char):undefined\r\n    };\r\n\r\n    vscode.window.showTextDocument(\r\n        vscode.Uri.file( join(workspaceRootFolder, file) ),\r\n        textDocumentOptions);\r\n  });\r\n}\r\n\r\nmodule.exports = {register, deactivate};\r\n","// imports\nlet vscode = require('vscode');\nconst { getKeymapTree } = require('./utility');\n\n// configuration variables\nlet keymapTree        = undefined; // will be read from user configuration\nlet persistentParents = undefined; // will be read from user configuration\nlet navigationModeStatusBarText = undefined; // will be read from user configuration\nlet editModeStatusBarText = undefined; // will be read from user configuration\n\nlet isInNavigationMode = false;\nlet typeSubscriptions  = undefined;\nlet statusBarItem      = undefined;\nlet lastKeyName        = undefined;\nlet lastKeyNode        = undefined;\n\n// constants\nconst navigationModeCursorStyle   = vscode.TextEditorCursorStyle.Block;\nconst editModeCursorStyle         = vscode.TextEditorCursorStyle.Line;\n\n// navigation API configuration\nconst toggleId    = \"codereaper.toggle\";\nconst clearInputId = \"codereaper.clearInput\";\n\n// custom register function that will be called during extension activation\nfunction register (context)\n{\n  // setup status bar item\n  statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\n  statusBarItem.command = toggleId;\n\n  // setup all subscriptions\n  context.subscriptions.push(\n    vscode.commands.registerCommand(toggleId, modeToggle),\n    vscode.commands.registerCommand(clearInputId, clearInput),\n    vscode.workspace.onDidChangeConfiguration(updateConfig),\n    vscode.window.onDidChangeActiveTextEditor(e => updateCursorState(e))\n  );\n\n  context.subscriptions.push(statusBarItem);\n\n  // initialization\n  updateConfig();\n  switchToEditMode();\n  resetInputKeyTreeState();\n}\n\nfunction updateConfig()\n{\n  const codereaper = vscode.workspace.getConfiguration(\"codereaper\");\n\n  keymapTree = getKeymapTree(codereaper.get(\"keymap\"));\n  persistentParents = new Set(codereaper.get(\"stickyParentKeys\"));\n  navigationModeStatusBarText = codereaper.get(\"navigationModeIdentifier\");\n  editModeStatusBarText = codereaper.get(\"editModeIdentifier\");\n}\n\n// helper functions\nfunction modeToggle()\n{\n  if (isInNavigationMode)\n  { switchToEditMode(); }\n  else \n  { switchToNavigationMode(); }\n  resetInputKeyTreeState();\n}\n\nfunction clearInput()\n{\n  if (isInNavigationMode)\n  {\n    vscode.commands.executeCommand(\"cancelSelection\");\n    vscode.commands.executeCommand(\"removeSecondaryCursors\");\n    resetInputKeyTreeState();\n  }\n}\n\nfunction switchToEditMode()\n{\n  if (typeSubscriptions)\n  {\n    typeSubscriptions.dispose();\n    typeSubscriptions = undefined;\n  }\n  isInNavigationMode = false;\n  updateCursorState(vscode.window.activeTextEditor);\n  updateStatusBarItem();\n\n  vscode.commands.executeCommand('setContext', \"codereaper.isInNavigationMode\", false);\n}\n\nfunction switchToNavigationMode()\n{\n  if (!typeSubscriptions)\n  { typeSubscriptions = vscode.commands.registerCommand(\"type\", onType); }\n  isInNavigationMode = true;\n  updateCursorState(vscode.window.activeTextEditor);\n  updateStatusBarItem();\n\n  vscode.commands.executeCommand('setContext', \"codereaper.isInNavigationMode\", true);\n}\n\nasync function onType(event)\n{\n  const editor = vscode.window.activeTextEditor;\n  const keyNode = (event.text in lastKeyNode)?lastKeyNode[event.text]:undefined;\n\n  if (!keyNode)\n  {\n    const lastParent = lastKeyName;\n    resetInputKeyTreeState();\n    \n    if (persistentParents.has(lastParent))\n    { onType(event); }\n    return;\n  }\n\n  if (editor && (\"command\" in keyNode))\n  {\n    await vscode.commands.executeCommand(keyNode.command, keyNode.args);  \n    \n    if (!persistentParents.has(lastKeyName))\n    { resetInputKeyTreeState(); }\n  }\n  else\n  {\n    lastKeyName = event.text;\n    lastKeyNode = keyNode;\n  }\n}\n\nfunction updateCursorState(editor)\n{\n  if (editor)\n  {\n    if (isInNavigationMode)\n    { editor.options.cursorStyle = navigationModeCursorStyle; }\n    else \n    { editor.options.cursorStyle = editModeCursorStyle; }\n  }\n}\n\nfunction updateStatusBarItem()\n{\n  if (statusBarItem)\n  {\n    statusBarItem.text = isInNavigationMode?navigationModeStatusBarText:editModeStatusBarText;\n    statusBarItem.show();\n  }\n}\n\nfunction resetInputKeyTreeState()\n{\n  lastKeyName = \"root\";\n  lastKeyNode = keymapTree[lastKeyName];\n}\n\n// register objects that need to be exported\nmodule.exports = { register }\n","// function to generate tree of key shortcuts\nfunction getKeymapTree(keymap)\n{\n  let tree = {};\n  tree[\"root\"] = {};\n\n  for (const key in keymap)\n  {\n    let parent = tree[\"root\"];\n    \n    let i = 0;\n    for (; i < key.length-1; i++)\n    {\n      if (!(key[i] in parent))\n      { parent[key[i]] = {}; }\n\n      parent = parent[key[i]];\n    }\n    parent[key[i]] = keymap[key];\n  }\n  return tree;\n}\n\n// export required modules\nmodule.exports = { getKeymapTree };\n","let vscode = require('vscode');\n\nfunction register(context) \n{\n  let _ = undefined;\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectDoubleQuote',           singleSelect.bind(_, { char: '\"' })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectSingleQuote',           singleSelect.bind(_, { char: \"'\" })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectEitherQuote',           selectEitherQuote));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.switchQuotes',                switchQuotes));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectBackTick',              singleSelect.bind(_, { char: \"`\", multiline: true })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectParenthesis',           matchingSelect.bind(_, { start_char: \"(\", end_char: \")\" })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectSquareBrackets',        matchingSelect.bind(_, { start_char: \"[\", end_char: \"]\" })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectCurlyBrackets',         matchingSelect.bind(_, { start_char: \"{\", end_char: \"}\" })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectParenthesisOuter',      matchingSelect.bind(_, { start_char: \"(\", end_char: \")\", outer: true })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectSquareBracketsOuter',   matchingSelect.bind(_, { start_char: \"[\", end_char: \"]\", outer: true })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectCurlyBracketsOuter',    matchingSelect.bind(_, { start_char: \"{\", end_char: \"}\", outer: true })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectAngleBrackets',         matchingSelect.bind(_, { start_char: \"<\", end_char: \">\" })));\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectInTag',                 matchingSelect.bind(_, { start_char: \">\", end_char: \"<\" })));\n}\n\n// helper functions\nfunction findOccurances(doc, line, char)\n{\n  var content = doc.lineAt(line);\n  var matches = (content.text + \"hack\").split(char).reduce((acc, p) => {\n    var len = p.length + 1;\n    if (acc.length > 0) {\n      len += acc[acc.length - 1];\n    }\n    acc.push(len);\n    return acc;\n  }, []);\n\n  matches.pop();\n  return matches;\n}\n\nfunction findNext(doc, line, char, start_index = 0, nest_char = undefined, nested = 0)\n{\n  if (line === doc.lineCount) \n  { return undefined };\n\n  var occurances = findOccurances(doc, line, char).filter(n => n >= start_index);\n  var nests = nest_char ? findOccurances(doc, line, nest_char).filter(n => n >= start_index) : [];\n  var occurance_index = 0;\n  var nests_index = 0;\n  \n  while ((occurance_index < occurances.length || nests_index < nests.length) && nested >= 0) \n  {\n    if (occurances[occurance_index] < nests[nests_index] || !nests[nests_index]) \n    {\n      if (nested === 0) \n      {\n        return new vscode.Position(line, occurances[occurance_index]);\n      }\n      nested--\n      occurance_index++;\n    } \n    else if (nests[nests_index] < occurances[occurance_index] || !occurances[occurance_index]) \n    {\n      nested++;\n      nests_index++;\n    }\n  }\n  return findNext(doc, ++line, char, 0, nest_char, nested);\n}\n\nfunction findPrevious(doc, line, char, start_index, nest_char = undefined, nested = 0)\n{\n  if (line === -1) \n  { return undefined };\n  \n  if (start_index === undefined) \n  { start_index = doc.lineAt(line).text.length; }\n  \n  var occurances = findOccurances(doc, line, char).filter(n => n <= start_index);\n  var nests = nest_char ? findOccurances(doc, line, nest_char).filter(n => n <= start_index) : [];\n  var occurance_index = occurances.length - 1;\n  var nests_index = nests.length - 1;\n  while ((occurance_index > -1 || nests_index > -1) && nested >= 0) \n  {\n    if (occurances[occurance_index] > nests[nests_index] || !nests[nests_index]) \n    {\n      if (nested === 0) \n      {\n        return new vscode.Position(line, occurances[occurance_index]);\n      }\n      nested--\n      occurance_index--;\n    } \n    else if (nests[nests_index] > occurances[occurance_index] || !occurances[occurance_index]) \n    {\n      nested++;\n      nests_index--;\n    }\n  }\n  return findPrevious(doc, --line, char, undefined, nest_char, nested);\n}\n\nfunction findSingleSelect(s, doc, char, outer, multiline)\n{\n  let {line, character} = s.active;\n  let matches = findOccurances(doc, line, char);\n  let next = matches.find(a => a > character);\n  let next_index = matches.indexOf(next);\n  let offset = outer ? char.length : 0;\n  if (matches.length > 1 && matches.length % 2 === 0) \n  {\n    // Jump inside the next matching pair\n    if (next === -1) \n    { return s }\n    if (next_index % 2 !== 0) \n    {\n      next_index--;\n    }\n    //Automatically grow to outer selection\n    if (!outer &&\n      new vscode.Position(line, matches[next_index]).isEqual(s.anchor) &&\n      new vscode.Position(line, matches[next_index + 1] - 1).isEqual(s.end)) \n    {\n      offset = char.length\n    }\n    return new vscode.Selection(\n      new vscode.Position(line, matches[next_index] - offset),\n      new vscode.Position(line, matches[next_index + 1] - 1 + offset)\n    );\n  } \n  else if (multiline) \n  {\n    let start_pos = findPrevious(doc, line, char, character) || new vscode.Position(line, matches[next_index])\n    if (!start_pos) \n    { return s };\n    let end_pos = findNext(doc, start_pos.line, char, start_pos.character + 1);\n    //Automatically grow to outer selection\n    if (!outer &&\n      start_pos.isEqual(s.anchor) &&\n      new vscode.Position(end_pos.line, end_pos.character - 1).isEqual(s.end)) \n    {\n      offset = char.length\n    }\n    if (start_pos && end_pos) \n    {\n      start_pos = new vscode.Position(start_pos.line, start_pos.character - offset);\n      end_pos = new vscode.Position(end_pos.line, end_pos.character - 1 + offset);\n      return new vscode.Selection(start_pos, end_pos)\n    }\n  }\n  return s;\n\n}\n\nfunction singleSelect({char, outer = false, multiline = false}) \n{\n  let editor = vscode.window.activeTextEditor;\n  if (!editor) \n  { return; };\n  let doc = editor.document\n  let sel = editor.selections\n  editor.selections = sel.map(s => findSingleSelect(s, doc, char, outer, multiline))\n}\n\nfunction getSwitchables() \n{\n  const includeBackTicks = vscode.workspace.getConfiguration('quick-select').get('includeBackticks');\n  return ['\"',\"'\"].concat(includeBackTicks ? ['`']:[])\n}\n\nfunction selectEitherQuote() \n{\n  const switchables = getSwitchables();\n  let editor = vscode.window.activeTextEditor;\n  if (!editor) \n  { return; }\n  \n  let doc = editor.document\n  let sel = editor.selections\n  editor.selections = sel.map((s) => {\n    let selections = switchables.map(char => findSingleSelect(s,doc,char, false, false))\n    .filter(sel => sel !== s)\n    .filter(sel => sel.start.isBeforeOrEqual(s.start) && sel.end.isAfterOrEqual(s.end))\n    .sort((a,b) => a.start.isBefore(b.start) ? 1 : -1)\n    if (selections.length > 0) {\n      return selections[0]\n    }\n    return s;\n  })\n}\n\nfunction charRange(p) \n{\n  let end_pos = new vscode.Position(p.line, p.character + 1);\n  return new vscode.Selection(p, end_pos)\n}\n\nfunction switchQuotes()\n{\n  const switchables = getSwitchables();\n  let editor = vscode.window.activeTextEditor;\n  let original_sel = editor.selections\n  selectEitherQuote()\n  if (!editor) { return; };\n  let doc = editor.document\n  let sel = editor.selections\n  sel.map((s) => {\n    if (s.start.isEqual(s.end)) \n    { return }\n\n    //expand selection if needed\n    let expand_start = switchables.indexOf(doc.getText(charRange(s.start))) === -1 ? 1 : 0\n    let expand_end = switchables.indexOf(doc.getText(charRange(s.end))) === -1 ? 1 : 0\n    let start_pos = new vscode.Position(s.start.line, s.start.character - expand_start);\n    let end_pos = new vscode.Position(s.end.line, s.end.character - expand_end);\n    s = new vscode.Selection(start_pos, end_pos)\n    var char = doc.getText(charRange(s.start))\n    var edit = new vscode.WorkspaceEdit();\n    let next_index = switchables.indexOf(char)+1;\n    if (next_index === switchables.length) {\n      next_index = 0\n    }\n    let next_char = switchables[next_index];\n    edit.replace(doc.uri, charRange(s.start), next_char)\n    edit.replace(doc.uri, charRange(s.end), next_char)\n    vscode.workspace.applyEdit(edit)\n    doc.getText()\n  })\n  // restore orignal selection\n  console.log(original_sel)\n  editor.selections = original_sel;\n  console.log(editor.selections)\n}\n\nfunction matchingSelect({start_char, end_char, outer = false}) \n{\n  let editor = vscode.window.activeTextEditor;\n  if (!editor) { return; };\n  let doc = editor.document\n  let sel = editor.selections\n  let success = false;\n  let start_offset = outer ? start_char.length : 0;\n  let end_offset = outer ? end_char.length : 0;\n  editor.selections = sel.map(s => {\n    let {line, character} = s.active;\n    let starts = findOccurances(doc, line, start_char);\n    let ends = findOccurances(doc, line, end_char);\n    let start = starts.find(a => a > character);\n    let end = ends.find(a => a > character);\n    let start_index = starts.indexOf(start);\n    let start_pos = findPrevious(doc, line, start_char, character, end_char) || new vscode.Position(line, starts[start_index]);\n    if (!start_pos) { return s };\n    let end_pos = findNext(doc, start_pos.line, end_char, start_pos.character + 1, start_char);\n    if (start_pos && end_pos) {\n      success = true;\n      //Automatically grow to outer selection\n      if (!outer &&\n        start_pos.isEqual(s.anchor) &&\n        new vscode.Position(end_pos.line, end_pos.character - 1).isEqual(s.end)) {\n        start_offset = start_char.length;\n        end_offset = end_char.length;\n      }\n      start_pos = new vscode.Position(start_pos.line, start_pos.character - start_offset);\n      end_pos = new vscode.Position(end_pos.line, end_pos.character - 1 + end_offset);\n      return new vscode.Selection(start_pos, end_pos)\n    }\n    return s;\n  })\n  if (success && start_char === \"<\") {\n    vscode.commands.executeCommand(\"editor.action.addSelectionToNextFindMatch\")\n  }\n}\n\nmodule.exports = { register };\n","let vscode = require('vscode');\nlet path   = require('path');\nconst {existsSync} = require('fs');\nlet { MRUTabs } = require('./types');\n\n// constants\nlet maxMRUTabs = 10; // default, will be updated later based on user-configuration\nlet hintCharList = \"asdjklyweio\"; // default, will be updated later based on user-configuration\nlet removeClosedTabsFromList = false;\n\n// configuration\nconst jumpToTabId = 'codereaper.jumpToTab';\nconst quickJumpToTabId = 'codereaper.quickJumpToTab';\n\n// global variables\nlet mruTabsList = new MRUTabs(maxMRUTabs);\nlet lastTab = undefined;\n\nfunction register(context)\n{\n  context.subscriptions.push(\n    vscode.commands.registerCommand(jumpToTabId, jumpToTab),\n    vscode.commands.registerCommand(quickJumpToTabId, quickJumpToTab),\n    vscode.workspace.onDidChangeConfiguration(updateConfig)\n  );\n\n  // register listeners to maintain MRU Tabs List\n  vscode.window.onDidChangeActiveTextEditor(e => {\n    try\n    {\n      const _ = lastTab?mruTabsList.add(lastTab, undefined):undefined;\n      lastTab = e.document.uri.fsPath;\n      mruTabsList.remove(e.document.uri.fsPath);\n    }\n    catch(err)\n    { console.log(err); }\n  });\n\n  vscode.workspace.onDidCloseTextDocument(d => {\n    const file = d.uri.fsPath;\n    if (removeClosedTabsFromList == true)\n    { mruTabsList.remove(file); }\n    if (file == lastTab)\n    { lastTab = undefined; }\n  });\n\n  updateConfig();\n}\n\nfunction updateConfig()\n{\n  const codereaper = vscode.workspace.getConfiguration(\"codereaper\");\n\n  maxMRUTabs = codereaper.get(\"maxMRUTabsLen\");\n  hintCharList = codereaper.get(\"tabHintCharList\");\n  mruTabsList.setMaxSize(maxMRUTabs);\n  removeClosedTabsFromList = codereaper.get(\"removeClosedTabsFromList\");\n}\n\nfunction jumpToTab()\n{\n  // get list of known text docs\n  let knownDocs = mruTabsList.getMRUTabs();\n  const hintLen = Math.ceil(knownDocs.length/hintCharList.length);\n  let docHints = generateFixedLenHints(knownDocs.length, hintLen);\n\n  // combine hints and docs together\n  let searcheable = Object.keys(knownDocs).map(label => ({label: `${docHints[label]} ~ ${path.basename(knownDocs[label])}`,\n                                                          description: `${vscode.workspace.asRelativePath(path.dirname(knownDocs[label]))}`,\n                                                          alwaysShow: true}));\n  // set up quick-pick\n  let quickPick = vscode.window.createQuickPick();\n\n  quickPick.matchOnDescription = true;\n  quickPick.matchOnDetail = true;\n  quickPick.items = searcheable;\n\n  // pre-select first item in the list\n  quickPick.items[0].picked = true;\n\n  quickPick.onDidAccept(()=>{\n    quickPick.selectedItems.forEach(e => {\n      const dirname = e.description;\n      const filename = (e.label.split('~')[1]).trimStart();\n      let fullPath = path.join(dirname, filename)\n\n      // in case the file is not from workspace folder don't prematurely append workspace folder\n      if (!existsSync(fullPath))\n      { fullPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, fullPath); }\n\n      vscode.window.showTextDocument(\n        vscode.Uri.file( fullPath ),\n        { preview: false});\n    })\n  });\n\n  quickPick.onDidHide(() => quickPick.dispose());\n  quickPick.show();\n}\n\nfunction quickJumpToTab()\n{\n  // get list of known text docs\n  let knownDocs = mruTabsList.getMRUTabs();\n  const hintLen = Math.ceil(knownDocs.length/hintCharList.length);\n  let docHints = generateFixedLenHints(knownDocs.length, hintLen);\n\n  // combine hints and docs together\n  let searcheable = Object.keys(knownDocs).map(label => ({label: `${docHints[label]} ~ ${path.basename(knownDocs[label])}`,\n                                                          description: `${vscode.workspace.asRelativePath(path.dirname(knownDocs[label]))}`,\n                                                          alwaysShow: true}));\n  // set up quick-pick\n  let quickPick = vscode.window.createQuickPick();\n\n  quickPick.matchOnDescription = false;\n  quickPick.matchOnDetail = false;\n  quickPick.canSelectMany = false;\n\n  quickPick.items = searcheable;\n\n  // pre-select first item in the list\n  quickPick.items[0].picked = true;\n\n  quickPick.onDidChangeValue(e => {\n    if (e != '')\n    {\n      if (e.length == hintLen)\n      {\n        const firstItem = quickPick.activeItems[0];\n\n        const dirname = firstItem.description;\n        const filename = (firstItem.label.split('~')[1]).trimStart();\n        let fullPath = path.join(dirname, filename)\n\n        // in case the file is not from workspace folder don't prematurely append workspace folder\n        if (!existsSync(fullPath))\n        { fullPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, fullPath); }\n\n        vscode.window.showTextDocument(\n          vscode.Uri.file( fullPath ),\n          { preview: false});\n\n        quickPick.dispose();\n      }\n    }\n  });\n\n  quickPick.onDidAccept(()=>{\n    quickPick.selectedItems.forEach(e => {\n      const dirname = e.description;\n      const filename = (e.label.split('~')[1]).trimStart();\n      let fullPath = path.join(dirname, filename)\n\n      // in case the file is not from workspace folder don't prematurely append workspace folder\n      if (!existsSync(fullPath))\n      { fullPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, fullPath); }\n\n      vscode.window.showTextDocument(\n        vscode.Uri.file( fullPath ),\n        { preview: false});\n    })\n  });\n\n  quickPick.onDidHide(() => quickPick.dispose());\n  quickPick.show();\n}\n\nfunction generateFixedLenHints(count, hintLen)\n{\n  let dfs = (hint, list) => {\n    if (list.length >= count) return list;\n\n    if (hint.length < hintLen)\n    {\n      for (let i = 0; i < hintCharList.length; i++)\n      {\n        dfs(hint + hintCharList[i], list);\n      }\n    }\n    else\n    {\n      list.push(hint);\n    }\n    return list;\n  };\n\n  return dfs('', []);\n}\n\nfunction generateVariableLabelList(count)\n{\n  let hintList = [''];\n  let offset = 0;\n  while (   (hintList.length - offset < count)\n         || (hintList.length == 1))\n  {\n    let hint = hintList[offset++];\n    (new Set(hintCharList)).forEach((val) => {\n        hintList.push(hint + val);\n    });\n  }\n\n  return hintList.slice(offset, offset + count);\n}\n\nfunction getKnownTextDocs()\n{\n  let knownDocsPaths = []\n  vscode.workspace.textDocuments.forEach(doc => {\n    knownDocsPaths.push(doc.uri.fsPath);\n  });\n\n  return knownDocsPaths;\n}\n\nmodule.exports = {register};\n","class MRUTabs \n{\n  constructor(maxSize)\n  {\n    this.mruTabs_ = new Map(); // map remembers the order of insertion\n    this.maxSize_ = maxSize;\n  }\n  \n  add(docURI, value)\n  {\n    this.remove(docURI);\n    this.mruTabs_.set(docURI, value);\n    this.clampBuffer();\n  }\n\n  remove(docURI)\n  {\n    if (this.mruTabs_.has(docURI))\n    { this.mruTabs_.delete(docURI); }\n  }\n\n  get(docURI)\n  {  return this.mruTabs_.get(docURI);  }\n\n  setMaxSize(size)\n  { this.maxSize_ = size; this.clampBuffer(); }\n\n  clampBuffer()\n  {\n    if (this.mruTabs_.size <= this.maxSize_)\n    { return; }\n    \n    const keys = [...this.mruTabs_.keys()];\n    while (this.mruTabs_.size > this.maxSize_)\n    {\n      const lruDoc = keys.shift();\n      this.mruTabs_.delete(lruDoc);\n    }\n  }\n\n  getMRUTabs()\n  { return [...this.mruTabs_.keys()].reverse(); }\n}\n\nmodule.exports = { MRUTabs };","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(474);\n"],"names":["navigation","quickselect","tabjump","fuzzysearch","module","exports","activate","context","register","deactivate","term","fuzzySearchIncludeArgs","fuzzySearchExcludeArgs","fuzzySearchContentRegExp","fuzzySearchTodoContentRegExp","fzfOptions","vscode","tmpdir","platform","EOL","join","sep","writeFileSync","watch","rmSync","readFile","termCWD","workspaceRootFolder","rgPath","fzfPath","milliseconds","Date","getTime","searchResultOutFile","toString","updateConfig","codereaper","workspace","getConfiguration","get","handleWorkspaceFoldersChange","getCommonWorkspaceFoldersRoot","wrkspcFolders","workspaceFolders","map","folder","uri","fsPath","rootPath","getRootPath","relFolderPaths","temp","replace","charAt","substring","filter","relFolder","length","rgArgsMultipleFolders","fuzzySearchIncludeGlob","slice","assembleFuzzySearchIncludeArgs","setupTerminal","undefined","exitStatus","sendText","show","window","createTerminal","name","hideFromUser","shellPath","getShell","cwd","fuzzySearchFiles","fzf_cmd","getFZFCmdFiles","rg_cmd","errorLevel_cmd","getShellErrorCodeCmd","finalCmd","concatMultipleShellCommands","fuzzySearchFileContents","fuzzySearchTodoContents","folders","Set","split","i","thisPath","elem","has","curPlatform","commands","openFiles","data","s","forEach","p","file","lineTmp","charTmp","line","char","parseInt","textDocumentOptions","preview","selection","Range","showTextDocument","Uri","subscriptions","push","registerCommand","onDidChangeConfiguration","onDidChangeWorkspaceFolders","eventType","encoding","err","lines","exitCode","isNaN","hide","error","console","log","showErrorMessage","getKeymapTree","keymapTree","persistentParents","navigationModeStatusBarText","editModeStatusBarText","typeSubscriptions","statusBarItem","lastKeyName","lastKeyNode","isInNavigationMode","navigationModeCursorStyle","TextEditorCursorStyle","Block","editModeCursorStyle","Line","toggleId","modeToggle","switchToEditMode","onType","updateCursorState","activeTextEditor","updateStatusBarItem","executeCommand","resetInputKeyTreeState","clearInput","dispose","async","event","editor","keyNode","text","lastParent","command","args","options","cursorStyle","createStatusBarItem","StatusBarAlignment","Left","onDidChangeActiveTextEditor","e","keymap","tree","key","parent","findOccurances","doc","matches","lineAt","reduce","acc","len","pop","findNext","start_index","nest_char","nested","lineCount","occurances","n","nests","occurance_index","nests_index","Position","findPrevious","findSingleSelect","outer","multiline","character","active","next","find","a","next_index","indexOf","offset","isEqual","anchor","end","Selection","start_pos","end_pos","singleSelect","document","sel","selections","getSwitchables","includeBackTicks","concat","selectEitherQuote","switchables","start","isBeforeOrEqual","isAfterOrEqual","sort","b","isBefore","charRange","switchQuotes","original_sel","expand_start","getText","expand_end","edit","WorkspaceEdit","next_char","applyEdit","matchingSelect","start_char","end_char","success","start_offset","end_offset","starts","ends","_","bind","path","existsSync","lastTab","MRUTabs","maxMRUTabs","hintCharList","removeClosedTabsFromList","mruTabsList","setMaxSize","jumpToTab","knownDocs","getMRUTabs","hintLen","Math","ceil","docHints","generateFixedLenHints","searcheable","Object","keys","label","basename","description","asRelativePath","dirname","alwaysShow","quickPick","createQuickPick","matchOnDescription","matchOnDetail","items","picked","onDidAccept","selectedItems","filename","trimStart","fullPath","onDidHide","quickJumpToTab","canSelectMany","onDidChangeValue","firstItem","activeItems","count","dfs","hint","list","add","remove","onDidCloseTextDocument","d","constructor","maxSize","this","mruTabs_","Map","maxSize_","docURI","value","set","clampBuffer","delete","size","lruDoc","shift","reverse","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}