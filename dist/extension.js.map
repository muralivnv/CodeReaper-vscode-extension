{"version":3,"file":"extension.js","mappings":"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","sources":[".././src/extension.js",".././src/fuzzysearch/fuzzysearch.js",".././src/navigation/navigation.js",".././src/navigation/utility.js",".././src/quickselect/quickselect.js",".././src/tabjump/tabjump.js",".././src/tabjump/types.js","../external commonjs \"fs\"","../external commonjs \"os\"","../external commonjs \"path\"","../external commonjs \"vscode\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["// imports\nlet navigation = require('./navigation/navigation')\nlet quickselect = require('./quickselect/quickselect')\nlet tabjump = require('./tabjump/tabjump')\nlet fuzzysearch = require('./fuzzysearch/fuzzysearch')\n\n// main\nfunction activate(context)\n{\n\tnavigation.register(context);\n\tquickselect.register(context);\n\ttabjump.register(context);\n\tfuzzysearch.register(context);\n}\n\nfunction deactivate() \n{ fuzzysearch.deactivate(); }\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","let vscode = require('vscode');\r\nlet { tmpdir, platform, EOL } = require('os');\r\nlet {join} = require('path');\r\nlet {writeFileSync, watch, rmSync, readFile} = require('fs');\r\n\r\nlet term = undefined;\r\nlet rgPath = \"rg\";\r\nlet fzfPath = \"fzf\";\r\nlet fuzzySearchIncludeGlob = undefined;\r\nlet fuzzySearchExcludeGlob = undefined;\r\nlet fuzzySearchContentRegExp = undefined;\r\nlet fuzzySearchTodoContentRegExp = undefined;\r\nlet fzfOptions = undefined;\r\n\r\nconst milliseconds = (new Date()).getTime();\r\nconst searchResultOutFile = join(tmpdir(), `vscode_fuzzysearch_${milliseconds.toString()}.tmp`);\r\nconst fuzzySearchFileId = \"codereaper.fuzzySearchFiles\";\r\nconst fuzzySearchFileContentId = \"codereaper.fuzzySearchFileContents\";\r\nconst fuzzySearchTodoContentsId = \"codereaper.fuzzySearchTodoContents\"\r\n\r\nfunction register(context)\r\n{\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(fuzzySearchFileId, fuzzySearchFiles),\r\n    vscode.commands.registerCommand(fuzzySearchFileContentId, fuzzySearchFileContents),\r\n    vscode.commands.registerCommand(fuzzySearchTodoContentsId, fuzzySearchTodoContents),\r\n    vscode.workspace.onDidChangeConfiguration(updateConfig)\r\n  );\r\n\r\n  writeFileSync(searchResultOutFile, '');\r\n  watch(searchResultOutFile, (eventType) => {\r\n    if (eventType == 'change')\r\n    { handleSelection(); }\r\n    else if (eventType == 'rename')\r\n    { vscode.window.showErrorMessage(\"fuzzy search output file has been renamed\\n\"); }\r\n  });\r\n\r\n  updateConfig();\r\n}\r\n\r\nfunction deactivate()\r\n{ rmSync(searchResultOutFile); }\r\n\r\nfunction updateConfig()\r\n{\r\n  const codereaper = vscode.workspace.getConfiguration(\"codereaper\");\r\n\r\n  rgPath = codereaper.get(\"ripgrepPath\");\r\n  fzfPath = codereaper.get(\"fzfPath\");\r\n  fuzzySearchIncludeGlob = codereaper.get(\"fuzzySearchIncludeGlob\");\r\n  fuzzySearchExcludeGlob = codereaper.get(\"fuzzySearchExcludeGlob\");\r\n  fuzzySearchContentRegExp = codereaper.get(\"fuzzySearchContentRegExp\");\r\n  fuzzySearchTodoContentRegExp = codereaper.get(\"fuzzySearchTodoContentRegExp\");\r\n  fzfOptions = codereaper.get(\"fzfOptions\");\r\n}\r\n\r\nfunction fuzzySearchFiles()\r\n{\r\n  if (   (!term                        )\r\n      || (term.exitStatus !== undefined))\r\n  {\r\n    createTerminal();\r\n  }\r\n\r\n  const fzf_cmd = getFZFCmdFiles();\r\n  const rg_cmd = getRgCmdFiles();\r\n  const errorLevel_cmd = getShellErrorCodeCmd();\r\n\r\n  term.sendText(`${rg_cmd} | ${fzf_cmd} > ${searchResultOutFile} & echo ${errorLevel_cmd} >> ${searchResultOutFile}`);\r\n  term.show();\r\n}\r\n\r\nfunction fuzzySearchFileContents()\r\n{\r\n  if (   (!term                        )\r\n      || (term.exitStatus !== undefined))\r\n  {\r\n    createTerminal();\r\n  }\r\n\r\n  const fzf_cmd = getFZFCmdContents();\r\n  const rg_cmd = getRgCmdContents();\r\n  const errorLevel_cmd = getShellErrorCodeCmd();\r\n\r\n  term.sendText(`${rg_cmd} | ${fzf_cmd} > ${searchResultOutFile} & echo ${errorLevel_cmd} >> ${searchResultOutFile}`);\r\n  term.show();\r\n}\r\n\r\nfunction fuzzySearchTodoContents()\r\n{\r\n  if (   (!term                        )\r\n      || (term.exitStatus !== undefined))\r\n  {\r\n    createTerminal();\r\n  }\r\n  const fzf_cmd = getFZFCmdFiles();\r\n  const rg_cmd  = getRgCmdTodoContents();\r\n  const errorLevel_cmd = getShellErrorCodeCmd();\r\n\r\n  term.sendText(`${rg_cmd} | ${fzf_cmd} > ${searchResultOutFile} & echo ${errorLevel_cmd} >> ${searchResultOutFile}`);\r\n  term.show();\r\n}\r\n\r\n// helper functions\r\nfunction createTerminal()\r\n{\r\n  term = vscode.window.createTerminal({\r\n    name: \"FuzzySearch\", \r\n    hideFromUser: true,\r\n    shellPath: getShell(),\r\n    cwd: vscode.workspace.workspaceFolders[0].uri.fsPath\r\n  });\r\n}\r\n\r\nfunction getShell()\r\n{\r\n  const curPlatform = platform();\r\n  if (curPlatform == 'win32')\r\n  { return \"cmd.exe\"; }\r\n  else if (curPlatform == 'linux')\r\n  { return \"bash\"; }\r\n  else \r\n  { return undefined; }\r\n}\r\n\r\nfunction getShellErrorCodeCmd()\r\n{\r\n  const curPlatform = platform();\r\n  if (curPlatform == 'win32')\r\n  { return \"%ErrorLevel%\"; }\r\n  return \"$?\";\r\n}\r\n\r\nfunction getFZFCmdContents()\r\n{ return `${fzfPath} ${fzfOptions} --delimiter : --nth 3..`; }\r\n\r\nfunction getFZFCmdFiles()\r\n{ return `${fzfPath} ${fzfOptions}`; }\r\n\r\nfunction getRgCmdFiles()\r\n{ return `${rgPath} --iglob ${fuzzySearchIncludeGlob} --iglob ${fuzzySearchExcludeGlob} --files`; }\r\n\r\nfunction getRgCmdContents()\r\n{ return `${rgPath} --line-number --column --iglob ${fuzzySearchIncludeGlob} --iglob ${fuzzySearchExcludeGlob} --pcre2 ${fuzzySearchContentRegExp}`; }\r\n\r\nfunction getRgCmdTodoContents()\r\n{ return `${rgPath} --line-number --column --iglob ${fuzzySearchIncludeGlob} --iglob ${fuzzySearchExcludeGlob} --pcre2 ${fuzzySearchTodoContentRegExp}`; }\r\n\r\nfunction handleSelection()\r\n{\r\n  readFile(searchResultOutFile, {encoding: 'utf-8'}, (err, data) => {\r\n    if (err)\r\n    { return; }\r\n\r\n    let lines = data.split(EOL).filter(s => s !== '');\r\n    var i = lines.length - 1;\r\n\r\n    // try to parse error code if any\r\n    try\r\n    {\r\n      const exitCode = parseInt(lines[i]);\r\n      if  ( (isNaN(exitCode) == false) && (exitCode != 0) )\r\n      {\r\n        i -= 1;\r\n        term?.hide();\r\n      }\r\n    }\r\n    catch (error)\r\n    { console.log(error); }\r\n\r\n    // parse rest of the file\r\n    for (; i >= 0; i--)\r\n    {\r\n      const isDataGood = (lines[i].length > 0) && (lines[i][0] != '1');\r\n      if (isDataGood)\r\n      {\r\n        try\r\n        {\r\n          openFiles(lines[i]);\r\n          term?.hide();\r\n        }\r\n        catch (error)\r\n        {  console.error(error);  }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction openFiles(data)\r\n{\r\n  const filePaths = data.split('\\n').filter(s => s !== '');\r\n  filePaths.forEach(p => {\r\n    const [file, lineTmp, charTmp] = p.split(':', 3);\r\n    let line = undefined, char = 0;\r\n    // let range = new vscode.Range(0, 0, 0, 0);\r\n    if (lineTmp !== undefined) {\r\n        if (charTmp !== undefined) {\r\n            char = parseInt(charTmp) - 1;  // 1 based in rg, 0 based in VS Code\r\n        }\r\n        line = parseInt(lineTmp) - 1;  // 1 based in rg, 0 based in VS Code\r\n    }\r\n\r\n    const textDocumentOptions = {\r\n      preview: false,\r\n      selection: line?new vscode.Range(line, char, line, char):undefined\r\n    };\r\n\r\n    vscode.window.showTextDocument(\r\n        vscode.Uri.file( join(vscode.workspace.workspaceFolders[0].uri.fsPath, file) ),\r\n        textDocumentOptions);\r\n  });\r\n}\r\n\r\nmodule.exports = {register, deactivate};\r\n","// imports\r\nlet vscode = require('vscode');\r\nconst { getKeymapTree } = require('./utility');\r\n\r\n// configuration variables\r\nlet keymapTree        = undefined; // will be read from user configuration\r\nlet persistentParents = undefined; // will be read from user configuration\r\nlet navigationModeStatusBarText = undefined; // will be read from user configuration\r\nlet editModeStatusBarText = undefined; // will be read from user configuration\r\n\r\nlet isInNavigationMode = false;\r\nlet typeSubscriptions  = undefined;\r\nlet statusBarItem      = undefined;\r\nlet lastKeyName        = undefined;\r\nlet lastKeyNode        = undefined;\r\n\r\n// constants\r\nconst navigationModeCursorStyle   = vscode.TextEditorCursorStyle.Block;\r\nconst editModeCursorStyle         = vscode.TextEditorCursorStyle.Line;\r\n\r\n// navigation API configuration\r\nconst toggleId    = \"codereaper.toggle\";\r\nconst clearInputId = \"codereaper.clearInput\";\r\n\r\n// custom register function that will be called during extension activation\r\nfunction register (context)\r\n{\r\n  // setup status bar item\r\n  statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\r\n  statusBarItem.command = toggleId;\r\n\r\n  // setup all subscriptions\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(toggleId, modeToggle),\r\n    vscode.commands.registerCommand(clearInputId, clearInput),\r\n    vscode.workspace.onDidChangeConfiguration(updateConfig),\r\n    vscode.window.onDidChangeActiveTextEditor(e => updateCursorState(e))\r\n  );\r\n\r\n  context.subscriptions.push(statusBarItem);\r\n\r\n  // initialization\r\n  updateConfig();\r\n  switchToEditMode();\r\n  resetInputKeyTreeState();\r\n}\r\n\r\nfunction updateConfig()\r\n{\r\n  const codereaper = vscode.workspace.getConfiguration(\"codereaper\");\r\n\r\n  keymapTree = getKeymapTree(codereaper.get(\"keymap\"));\r\n  persistentParents = new Set(codereaper.get(\"stickyParentKeys\"));\r\n  navigationModeStatusBarText = codereaper.get(\"navigationModeIdentifier\");\r\n  editModeStatusBarText = codereaper.get(\"editModeIdentifier\");\r\n}\r\n\r\n// helper functions\r\nfunction modeToggle()\r\n{\r\n  if (isInNavigationMode)\r\n  { switchToEditMode(); }\r\n  else \r\n  { switchToNavigationMode(); }\r\n  resetInputKeyTreeState();\r\n}\r\n\r\nfunction clearInput()\r\n{\r\n  if (isInNavigationMode)\r\n  {\r\n    vscode.commands.executeCommand(\"cancelSelection\");\r\n    vscode.commands.executeCommand(\"removeSecondaryCursors\");\r\n    resetInputKeyTreeState();\r\n  }\r\n}\r\n\r\nfunction switchToEditMode()\r\n{\r\n  if (typeSubscriptions)\r\n  {\r\n    typeSubscriptions.dispose();\r\n    typeSubscriptions = undefined;\r\n  }\r\n  isInNavigationMode = false;\r\n  updateCursorState(vscode.window.activeTextEditor);\r\n  updateStatusBarItem();\r\n\r\n  vscode.commands.executeCommand('setContext', \"codereaper.isInNavigationMode\", false);\r\n}\r\n\r\nfunction switchToNavigationMode()\r\n{\r\n  if (!typeSubscriptions)\r\n  { typeSubscriptions = vscode.commands.registerCommand(\"type\", onType); }\r\n  isInNavigationMode = true;\r\n  updateCursorState(vscode.window.activeTextEditor);\r\n  updateStatusBarItem();\r\n\r\n  vscode.commands.executeCommand('setContext', \"codereaper.isInNavigationMode\", true);\r\n}\r\n\r\nasync function onType(event)\r\n{\r\n  const editor = vscode.window.activeTextEditor;\r\n  const keyNode = (event.text in lastKeyNode)?lastKeyNode[event.text]:undefined;\r\n\r\n  if (!keyNode)\r\n  {\r\n    const lastParent = lastKeyName;\r\n    resetInputKeyTreeState();\r\n    \r\n    if (persistentParents.has(lastParent))\r\n    { onType(event); }\r\n    return;\r\n  }\r\n\r\n  if (editor && (\"command\" in keyNode))\r\n  {\r\n    await vscode.commands.executeCommand(keyNode.command, keyNode.args);  \r\n    \r\n    if (!persistentParents.has(lastKeyName))\r\n    { resetInputKeyTreeState(); }\r\n  }\r\n  else\r\n  {\r\n    lastKeyName = event.text;\r\n    lastKeyNode = keyNode;\r\n  }\r\n}\r\n\r\nfunction updateCursorState(editor)\r\n{\r\n  if (editor)\r\n  {\r\n    if (isInNavigationMode)\r\n    { editor.options.cursorStyle = navigationModeCursorStyle; }\r\n    else \r\n    { editor.options.cursorStyle = editModeCursorStyle; }\r\n  }\r\n}\r\n\r\nfunction updateStatusBarItem()\r\n{\r\n  if (statusBarItem)\r\n  {\r\n    statusBarItem.text = isInNavigationMode?navigationModeStatusBarText:editModeStatusBarText;\r\n    statusBarItem.show();\r\n  }\r\n}\r\n\r\nfunction resetInputKeyTreeState()\r\n{\r\n  lastKeyName = \"root\";\r\n  lastKeyNode = keymapTree[lastKeyName];\r\n}\r\n\r\n// register objects that need to be exported\r\nmodule.exports = { register }\r\n","// function to generate tree of key shortcuts\r\nfunction getKeymapTree(keymap)\r\n{\r\n  let tree = {};\r\n  tree[\"root\"] = {};\r\n\r\n  for (const key in keymap)\r\n  {\r\n    let parent = tree[\"root\"];\r\n    \r\n    let i = 0;\r\n    for (; i < key.length-1; i++)\r\n    {\r\n      if (!(key[i] in parent))\r\n      { parent[key[i]] = {}; }\r\n\r\n      parent = parent[key[i]];\r\n    }\r\n    parent[key[i]] = keymap[key];\r\n  }\r\n  return tree;\r\n}\r\n\r\n// export required modules\r\nmodule.exports = { getKeymapTree };\r\n","let vscode = require('vscode');\r\n\r\nfunction register(context) \r\n{\r\n  let _ = undefined;\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectDoubleQuote',           singleSelect.bind(_, { char: '\"' })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectSingleQuote',           singleSelect.bind(_, { char: \"'\" })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectEitherQuote',           selectEitherQuote));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.switchQuotes',                switchQuotes));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectBackTick',              singleSelect.bind(_, { char: \"`\", multiline: true })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectParenthesis',           matchingSelect.bind(_, { start_char: \"(\", end_char: \")\" })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectSquareBrackets',        matchingSelect.bind(_, { start_char: \"[\", end_char: \"]\" })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectCurlyBrackets',         matchingSelect.bind(_, { start_char: \"{\", end_char: \"}\" })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectParenthesisOuter',      matchingSelect.bind(_, { start_char: \"(\", end_char: \")\", outer: true })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectSquareBracketsOuter',   matchingSelect.bind(_, { start_char: \"[\", end_char: \"]\", outer: true })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectCurlyBracketsOuter',    matchingSelect.bind(_, { start_char: \"{\", end_char: \"}\", outer: true })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectAngleBrackets',         matchingSelect.bind(_, { start_char: \"<\", end_char: \">\" })));\r\n  context.subscriptions.push(vscode.commands.registerCommand('codereaper.selectInTag',                 matchingSelect.bind(_, { start_char: \">\", end_char: \"<\" })));\r\n}\r\n\r\n// helper functions\r\nfunction findOccurances(doc, line, char)\r\n{\r\n  var content = doc.lineAt(line);\r\n  var matches = (content.text + \"hack\").split(char).reduce((acc, p) => {\r\n    var len = p.length + 1;\r\n    if (acc.length > 0) {\r\n      len += acc[acc.length - 1];\r\n    }\r\n    acc.push(len);\r\n    return acc;\r\n  }, []);\r\n\r\n  matches.pop();\r\n  return matches;\r\n}\r\n\r\nfunction findNext(doc, line, char, start_index = 0, nest_char = undefined, nested = 0)\r\n{\r\n  if (line === doc.lineCount) \r\n  { return undefined };\r\n\r\n  var occurances = findOccurances(doc, line, char).filter(n => n >= start_index);\r\n  var nests = nest_char ? findOccurances(doc, line, nest_char).filter(n => n >= start_index) : [];\r\n  var occurance_index = 0;\r\n  var nests_index = 0;\r\n  \r\n  while ((occurance_index < occurances.length || nests_index < nests.length) && nested >= 0) \r\n  {\r\n    if (occurances[occurance_index] < nests[nests_index] || !nests[nests_index]) \r\n    {\r\n      if (nested === 0) \r\n      {\r\n        return new vscode.Position(line, occurances[occurance_index]);\r\n      }\r\n      nested--\r\n      occurance_index++;\r\n    } \r\n    else if (nests[nests_index] < occurances[occurance_index] || !occurances[occurance_index]) \r\n    {\r\n      nested++;\r\n      nests_index++;\r\n    }\r\n  }\r\n  return findNext(doc, ++line, char, 0, nest_char, nested);\r\n}\r\n\r\nfunction findPrevious(doc, line, char, start_index, nest_char = undefined, nested = 0)\r\n{\r\n  if (line === -1) \r\n  { return undefined };\r\n  \r\n  if (start_index === undefined) \r\n  { start_index = doc.lineAt(line).text.length; }\r\n  \r\n  var occurances = findOccurances(doc, line, char).filter(n => n <= start_index);\r\n  var nests = nest_char ? findOccurances(doc, line, nest_char).filter(n => n <= start_index) : [];\r\n  var occurance_index = occurances.length - 1;\r\n  var nests_index = nests.length - 1;\r\n  while ((occurance_index > -1 || nests_index > -1) && nested >= 0) \r\n  {\r\n    if (occurances[occurance_index] > nests[nests_index] || !nests[nests_index]) \r\n    {\r\n      if (nested === 0) \r\n      {\r\n        return new vscode.Position(line, occurances[occurance_index]);\r\n      }\r\n      nested--\r\n      occurance_index--;\r\n    } \r\n    else if (nests[nests_index] > occurances[occurance_index] || !occurances[occurance_index]) \r\n    {\r\n      nested++;\r\n      nests_index--;\r\n    }\r\n  }\r\n  return findPrevious(doc, --line, char, undefined, nest_char, nested);\r\n}\r\n\r\nfunction findSingleSelect(s, doc, char, outer, multiline)\r\n{\r\n  let {line, character} = s.active;\r\n  let matches = findOccurances(doc, line, char);\r\n  let next = matches.find(a => a > character);\r\n  let next_index = matches.indexOf(next);\r\n  let offset = outer ? char.length : 0;\r\n  if (matches.length > 1 && matches.length % 2 === 0) \r\n  {\r\n    // Jump inside the next matching pair\r\n    if (next === -1) \r\n    { return s }\r\n    if (next_index % 2 !== 0) \r\n    {\r\n      next_index--;\r\n    }\r\n    //Automatically grow to outer selection\r\n    if (!outer &&\r\n      new vscode.Position(line, matches[next_index]).isEqual(s.anchor) &&\r\n      new vscode.Position(line, matches[next_index + 1] - 1).isEqual(s.end)) \r\n    {\r\n      offset = char.length\r\n    }\r\n    return new vscode.Selection(\r\n      new vscode.Position(line, matches[next_index] - offset),\r\n      new vscode.Position(line, matches[next_index + 1] - 1 + offset)\r\n    );\r\n  } \r\n  else if (multiline) \r\n  {\r\n    let start_pos = findPrevious(doc, line, char, character) || new vscode.Position(line, matches[next_index])\r\n    if (!start_pos) \r\n    { return s };\r\n    let end_pos = findNext(doc, start_pos.line, char, start_pos.character + 1);\r\n    //Automatically grow to outer selection\r\n    if (!outer &&\r\n      start_pos.isEqual(s.anchor) &&\r\n      new vscode.Position(end_pos.line, end_pos.character - 1).isEqual(s.end)) \r\n    {\r\n      offset = char.length\r\n    }\r\n    if (start_pos && end_pos) \r\n    {\r\n      start_pos = new vscode.Position(start_pos.line, start_pos.character - offset);\r\n      end_pos = new vscode.Position(end_pos.line, end_pos.character - 1 + offset);\r\n      return new vscode.Selection(start_pos, end_pos)\r\n    }\r\n  }\r\n  return s;\r\n\r\n}\r\n\r\nfunction singleSelect({char, outer = false, multiline = false}) \r\n{\r\n  let editor = vscode.window.activeTextEditor;\r\n  if (!editor) \r\n  { return; };\r\n  let doc = editor.document\r\n  let sel = editor.selections\r\n  editor.selections = sel.map(s => findSingleSelect(s, doc, char, outer, multiline))\r\n}\r\n\r\nfunction getSwitchables() \r\n{\r\n  const includeBackTicks = vscode.workspace.getConfiguration('quick-select').get('includeBackticks');\r\n  return ['\"',\"'\"].concat(includeBackTicks ? ['`']:[])\r\n}\r\n\r\nfunction selectEitherQuote() \r\n{\r\n  const switchables = getSwitchables();\r\n  let editor = vscode.window.activeTextEditor;\r\n  if (!editor) \r\n  { return; }\r\n  \r\n  let doc = editor.document\r\n  let sel = editor.selections\r\n  editor.selections = sel.map((s) => {\r\n    let selections = switchables.map(char => findSingleSelect(s,doc,char, false, false))\r\n    .filter(sel => sel !== s)\r\n    .filter(sel => sel.start.isBeforeOrEqual(s.start) && sel.end.isAfterOrEqual(s.end))\r\n    .sort((a,b) => a.start.isBefore(b.start) ? 1 : -1)\r\n    if (selections.length > 0) {\r\n      return selections[0]\r\n    }\r\n    return s;\r\n  })\r\n}\r\n\r\nfunction charRange(p) \r\n{\r\n  let end_pos = new vscode.Position(p.line, p.character + 1);\r\n  return new vscode.Selection(p, end_pos)\r\n}\r\n\r\nfunction switchQuotes()\r\n{\r\n  const switchables = getSwitchables();\r\n  let editor = vscode.window.activeTextEditor;\r\n  let original_sel = editor.selections\r\n  selectEitherQuote()\r\n  if (!editor) { return; };\r\n  let doc = editor.document\r\n  let sel = editor.selections\r\n  sel.map((s) => {\r\n    if (s.start.isEqual(s.end)) \r\n    { return }\r\n\r\n    //expand selection if needed\r\n    let expand_start = switchables.indexOf(doc.getText(charRange(s.start))) === -1 ? 1 : 0\r\n    let expand_end = switchables.indexOf(doc.getText(charRange(s.end))) === -1 ? 1 : 0\r\n    let start_pos = new vscode.Position(s.start.line, s.start.character - expand_start);\r\n    let end_pos = new vscode.Position(s.end.line, s.end.character - expand_end);\r\n    s = new vscode.Selection(start_pos, end_pos)\r\n    var char = doc.getText(charRange(s.start))\r\n    var edit = new vscode.WorkspaceEdit();\r\n    let next_index = switchables.indexOf(char)+1;\r\n    if (next_index === switchables.length) {\r\n      next_index = 0\r\n    }\r\n    let next_char = switchables[next_index];\r\n    edit.replace(doc.uri, charRange(s.start), next_char)\r\n    edit.replace(doc.uri, charRange(s.end), next_char)\r\n    vscode.workspace.applyEdit(edit)\r\n    doc.getText()\r\n  })\r\n  // restore orignal selection\r\n  console.log(original_sel)\r\n  editor.selections = original_sel;\r\n  console.log(editor.selections)\r\n}\r\n\r\nfunction matchingSelect({start_char, end_char, outer = false}) \r\n{\r\n  let editor = vscode.window.activeTextEditor;\r\n  if (!editor) { return; };\r\n  let doc = editor.document\r\n  let sel = editor.selections\r\n  let success = false;\r\n  let start_offset = outer ? start_char.length : 0;\r\n  let end_offset = outer ? end_char.length : 0;\r\n  editor.selections = sel.map(s => {\r\n    let {line, character} = s.active;\r\n    let starts = findOccurances(doc, line, start_char);\r\n    let ends = findOccurances(doc, line, end_char);\r\n    let start = starts.find(a => a > character);\r\n    let end = ends.find(a => a > character);\r\n    let start_index = starts.indexOf(start);\r\n    let start_pos = findPrevious(doc, line, start_char, character, end_char) || new vscode.Position(line, starts[start_index]);\r\n    if (!start_pos) { return s };\r\n    let end_pos = findNext(doc, start_pos.line, end_char, start_pos.character + 1, start_char);\r\n    if (start_pos && end_pos) {\r\n      success = true;\r\n      //Automatically grow to outer selection\r\n      if (!outer &&\r\n        start_pos.isEqual(s.anchor) &&\r\n        new vscode.Position(end_pos.line, end_pos.character - 1).isEqual(s.end)) {\r\n        start_offset = start_char.length;\r\n        end_offset = end_char.length;\r\n      }\r\n      start_pos = new vscode.Position(start_pos.line, start_pos.character - start_offset);\r\n      end_pos = new vscode.Position(end_pos.line, end_pos.character - 1 + end_offset);\r\n      return new vscode.Selection(start_pos, end_pos)\r\n    }\r\n    return s;\r\n  })\r\n  if (success && start_char === \"<\") {\r\n    vscode.commands.executeCommand(\"editor.action.addSelectionToNextFindMatch\")\r\n  }\r\n}\r\n\r\nmodule.exports = { register };\r\n","let vscode = require('vscode');\r\nlet path   = require('path');\r\nconst {existsSync} = require('fs');\r\nlet { MRUTabs } = require('./types');\r\n\r\n// constants\r\nlet maxMRUTabs = 10; // default, will be updated later based on user-configuration\r\nlet hintCharList = \"asdjklyweio\"; // default, will be updated later based on user-configuration\r\n\r\n// configuration\r\nconst jumpToTabId = 'codereaper.jumpToTab';\r\nconst quickJumpToTabId = 'codereaper.quickJumpToTab';\r\n\r\n// global variables\r\nlet mruTabsList = new MRUTabs(maxMRUTabs);\r\nlet lastTab = undefined;\r\n\r\nfunction register(context)\r\n{\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(jumpToTabId, jumpToTab),\r\n    vscode.commands.registerCommand(quickJumpToTabId, quickJumpToTab),\r\n    vscode.workspace.onDidChangeConfiguration(updateConfig)\r\n  );\r\n\r\n  // register listeners to maintain MRU Tabs List\r\n  vscode.window.onDidChangeActiveTextEditor(e => {\r\n    try\r\n    {\r\n      const _ = lastTab?mruTabsList.add(lastTab, undefined):undefined;\r\n      lastTab = e.document.uri.fsPath;\r\n      mruTabsList.remove(e.document.uri.fsPath);\r\n    }\r\n    catch(err)\r\n    { console.log(err); }\r\n  });\r\n\r\n  vscode.workspace.onDidCloseTextDocument(d => {\r\n    const file = d.uri.fsPath;\r\n    mruTabsList.remove(file);\r\n    \r\n    if (file == lastTab)\r\n    { lastTab = undefined; }\r\n  });\r\n\r\n  updateConfig();\r\n}\r\n\r\nfunction updateConfig()\r\n{\r\n  const codereaper = vscode.workspace.getConfiguration(\"codereaper\");\r\n\r\n  maxMRUTabs = codereaper.get(\"maxMRUTabsLen\");\r\n  hintCharList = codereaper.get(\"tabHintCharList\");\r\n  mruTabsList.setMaxSize(maxMRUTabs);\r\n}\r\n\r\nfunction jumpToTab()\r\n{\r\n  // get list of known text docs\r\n  let knownDocs = mruTabsList.getMRUTabs();\r\n  const hintLen = Math.ceil(knownDocs.length/hintCharList.length);\r\n  let docHints = generateFixedLenHints(knownDocs.length, hintLen);\r\n\r\n  // combine hints and docs together\r\n  let searcheable = Object.keys(knownDocs).map(label => ({label: `${docHints[label]} ~ ${path.basename(knownDocs[label])}`, \r\n                                                          description: `${vscode.workspace.asRelativePath(path.dirname(knownDocs[label]))}`, \r\n                                                          alwaysShow: true}));\r\n  // set up quick-pick\r\n  let quickPick = vscode.window.createQuickPick();\r\n\r\n  quickPick.matchOnDescription = true;\r\n  quickPick.matchOnDetail = true;\r\n  quickPick.items = searcheable;\r\n\r\n  // pre-select first item in the list\r\n  quickPick.items[0].picked = true;\r\n\r\n  quickPick.onDidAccept(()=>{\r\n    quickPick.selectedItems.forEach(e => {\r\n      const dirname = e.description;\r\n      const filename = (e.label.split('~')[1]).trimStart();\r\n      let fullPath = path.join(dirname, filename)\r\n\r\n      // in case the file is not from workspace folder don't prematurely append workspace folder\r\n      if (!existsSync(fullPath))\r\n      { fullPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, fullPath); }\r\n\r\n      vscode.window.showTextDocument(\r\n        vscode.Uri.file( fullPath ),\r\n        { preview: false});\r\n    })\r\n  });\r\n  \r\n  quickPick.onDidHide(() => quickPick.dispose());\r\n  quickPick.show();\r\n}\r\n\r\nfunction quickJumpToTab()\r\n{\r\n  // get list of known text docs\r\n  let knownDocs = mruTabsList.getMRUTabs();\r\n  const hintLen = Math.ceil(knownDocs.length/hintCharList.length);\r\n  let docHints = generateFixedLenHints(knownDocs.length, hintLen);\r\n\r\n  // combine hints and docs together\r\n  let searcheable = Object.keys(knownDocs).map(label => ({label: `${docHints[label]} ~ ${path.basename(knownDocs[label])}`, \r\n                                                          description: `${vscode.workspace.asRelativePath(path.dirname(knownDocs[label]))}`, \r\n                                                          alwaysShow: true}));\r\n  // set up quick-pick\r\n  let quickPick = vscode.window.createQuickPick();\r\n\r\n  quickPick.matchOnDescription = false;\r\n  quickPick.matchOnDetail = false;\r\n  quickPick.canSelectMany = false;\r\n\r\n  quickPick.items = searcheable;\r\n\r\n  // pre-select first item in the list\r\n  quickPick.items[0].picked = true;\r\n\r\n  quickPick.onDidChangeValue(e => {\r\n    if (e != '')\r\n    {\r\n      if (e.length == hintLen)\r\n      {\r\n        const firstItem = quickPick.activeItems[0];\r\n\r\n        const dirname = firstItem.description;\r\n        const filename = (firstItem.label.split('~')[1]).trimStart();\r\n        let fullPath = path.join(dirname, filename)\r\n\r\n        // in case the file is not from workspace folder don't prematurely append workspace folder\r\n        if (!existsSync(fullPath))\r\n        { fullPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, fullPath); }\r\n\r\n        vscode.window.showTextDocument(\r\n          vscode.Uri.file( fullPath ),\r\n          { preview: false});\r\n        \r\n        quickPick.dispose();\r\n      }\r\n    }\r\n  });\r\n\r\n  quickPick.onDidAccept(()=>{\r\n    quickPick.selectedItems.forEach(e => {\r\n      const dirname = e.description;\r\n      const filename = (e.label.split('~')[1]).trimStart();\r\n      let fullPath = path.join(dirname, filename)\r\n\r\n      // in case the file is not from workspace folder don't prematurely append workspace folder\r\n      if (!existsSync(fullPath))\r\n      { fullPath = path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, fullPath); }\r\n\r\n      vscode.window.showTextDocument(\r\n        vscode.Uri.file( fullPath ),\r\n        { preview: false});\r\n    })\r\n  });\r\n  \r\n  quickPick.onDidHide(() => quickPick.dispose());\r\n  quickPick.show();\r\n}\r\n\r\nfunction generateFixedLenHints(count, hintLen)\r\n{\r\n  let dfs = (hint, list) => {\r\n    if (list.length >= count) return list;\r\n\r\n    if (hint.length < hintLen) \r\n    {\r\n      for (let i = 0; i < hintCharList.length; i++) \r\n      {\r\n        dfs(hint + hintCharList[i], list);\r\n      }\r\n    }\r\n    else \r\n    {\r\n      list.push(hint);\r\n    }\r\n    return list;\r\n  };\r\n\r\n  return dfs('', []);\r\n}\r\n\r\nfunction generateVariableLabelList(count)\r\n{\r\n  let hintList = [''];\r\n  let offset = 0;\r\n  while (   (hintList.length - offset < count) \r\n         || (hintList.length == 1)) \r\n  {\r\n    let hint = hintList[offset++];\r\n    (new Set(hintCharList)).forEach((val) => {\r\n        hintList.push(hint + val);\r\n    });\r\n  }\r\n\r\n  return hintList.slice(offset, offset + count);\r\n}\r\n\r\nfunction getKnownTextDocs()\r\n{\r\n  let knownDocsPaths = []\r\n  vscode.workspace.textDocuments.forEach(doc => {\r\n    knownDocsPaths.push(doc.uri.fsPath);\r\n  });\r\n\r\n  return knownDocsPaths;\r\n}\r\n\r\nmodule.exports = {register};\r\n","class MRUTabs \r\n{\r\n  constructor(maxSize)\r\n  {\r\n    this.mruTabs_ = new Map(); // map remembers the order of insertion\r\n    this.maxSize_ = maxSize;\r\n  }\r\n  \r\n  add(docURI, value)\r\n  {\r\n    this.remove(docURI);\r\n    this.mruTabs_.set(docURI, value);\r\n    this.clampBuffer();\r\n  }\r\n\r\n  remove(docURI)\r\n  {\r\n    if (this.mruTabs_.has(docURI))\r\n    { this.mruTabs_.delete(docURI); }\r\n  }\r\n\r\n  get(docURI)\r\n  {  return this.mruTabs_.get(docURI);  }\r\n\r\n  setMaxSize(size)\r\n  { this.maxSize_ = size; this.clampBuffer(); }\r\n\r\n  clampBuffer()\r\n  {\r\n    if (this.mruTabs_.size <= this.maxSize_)\r\n    { return; }\r\n    \r\n    const keys = [...this.mruTabs_.keys()];\r\n    while (this.mruTabs_.size > this.maxSize_)\r\n    {\r\n      const lruDoc = keys.shift();\r\n      this.mruTabs_.delete(lruDoc);\r\n    }\r\n  }\r\n\r\n  getMRUTabs()\r\n  { return [...this.mruTabs_.keys()].reverse(); }\r\n}\r\n\r\nmodule.exports = { MRUTabs };","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(474);\n"],"names":["navigation","quickselect","tabjump","fuzzysearch","module","exports","activate","context","register","deactivate","term","fuzzySearchIncludeGlob","fuzzySearchExcludeGlob","fuzzySearchContentRegExp","fuzzySearchTodoContentRegExp","fzfOptions","vscode","tmpdir","platform","EOL","join","writeFileSync","watch","rmSync","readFile","rgPath","fzfPath","milliseconds","Date","getTime","searchResultOutFile","toString","updateConfig","codereaper","workspace","getConfiguration","get","fuzzySearchFiles","undefined","exitStatus","createTerminal","fzf_cmd","getFZFCmdFiles","rg_cmd","errorLevel_cmd","getShellErrorCodeCmd","sendText","show","fuzzySearchFileContents","fuzzySearchTodoContents","window","name","hideFromUser","shellPath","getShell","cwd","workspaceFolders","uri","fsPath","curPlatform","openFiles","data","split","filter","s","forEach","p","file","lineTmp","charTmp","line","char","parseInt","textDocumentOptions","preview","selection","Range","showTextDocument","Uri","subscriptions","push","commands","registerCommand","onDidChangeConfiguration","eventType","encoding","err","lines","i","length","exitCode","isNaN","hide","error","console","log","showErrorMessage","getKeymapTree","keymapTree","persistentParents","navigationModeStatusBarText","editModeStatusBarText","typeSubscriptions","statusBarItem","lastKeyName","lastKeyNode","isInNavigationMode","navigationModeCursorStyle","TextEditorCursorStyle","Block","editModeCursorStyle","Line","toggleId","Set","modeToggle","switchToEditMode","onType","updateCursorState","activeTextEditor","updateStatusBarItem","executeCommand","resetInputKeyTreeState","clearInput","dispose","async","event","editor","keyNode","text","lastParent","has","command","args","options","cursorStyle","createStatusBarItem","StatusBarAlignment","Left","onDidChangeActiveTextEditor","e","keymap","tree","key","parent","findOccurances","doc","matches","lineAt","reduce","acc","len","pop","findNext","start_index","nest_char","nested","lineCount","occurances","n","nests","occurance_index","nests_index","Position","findPrevious","findSingleSelect","outer","multiline","character","active","next","find","a","next_index","indexOf","offset","isEqual","anchor","end","Selection","start_pos","end_pos","singleSelect","document","sel","selections","map","getSwitchables","includeBackTicks","concat","selectEitherQuote","switchables","start","isBeforeOrEqual","isAfterOrEqual","sort","b","isBefore","charRange","switchQuotes","original_sel","expand_start","getText","expand_end","edit","WorkspaceEdit","next_char","replace","applyEdit","matchingSelect","start_char","end_char","success","start_offset","end_offset","starts","ends","_","bind","path","existsSync","lastTab","MRUTabs","maxMRUTabs","hintCharList","mruTabsList","setMaxSize","jumpToTab","knownDocs","getMRUTabs","hintLen","Math","ceil","docHints","generateFixedLenHints","searcheable","Object","keys","label","basename","description","asRelativePath","dirname","alwaysShow","quickPick","createQuickPick","matchOnDescription","matchOnDetail","items","picked","onDidAccept","selectedItems","filename","trimStart","fullPath","onDidHide","quickJumpToTab","canSelectMany","onDidChangeValue","firstItem","activeItems","count","dfs","hint","list","add","remove","onDidCloseTextDocument","d","constructor","maxSize","this","mruTabs_","Map","maxSize_","docURI","value","set","clampBuffer","delete","size","lruDoc","shift","reverse","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}